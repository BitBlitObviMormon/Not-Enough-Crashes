plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadowCommon
}

architectury {
    platformSetupLoomIde()
    fabric()
}

dependencies {
//    minecraft("com.mojang:minecraft:${rootProject.minecraft_version}")
    mappings("net.fabricmc:yarn:${rootProject.yarn_mappings}:v2")
//    modCompile("net.fabricmc:fabric-loader:${rootProject.loader_version}")
    modApi ("net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}")
    // Remove the next line if you don't want to depend on the API
//    modCompile("me.shedaniel:architectury:${rootProject.architectury_version}:fabric")

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentFabric(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}


processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "fabric"
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").remapSourcesJar
    dependsOn commonSources
    from zipTree(commonSources.output)
}

curseforge {
    apiKey = project.hasProperty("curseforge_api_key") ? project.curseforge_api_key : ""
    project {
        id = curseforge_id
        releaseType = 'release'
        addGameVersion "Fabric"
        addGameVersion curseforge_mc_version
        changelogType = "markdown"
        changelog = rootProject.file("changelog.md")

        mainArtifact(remapJar) {
            displayName = "$mod_name $total_version Fabric"
        }
    }

    options {
        forgeGradleIntegration = false
    }
}