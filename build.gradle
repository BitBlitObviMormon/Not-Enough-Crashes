plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id "com.jfrog.bintray"
    id 'com.matthewprenger.cursegradle'
}

ext {
    githubUrl = "https://github.com/$github_repo"
    replaceProperties = new Properties()
    File propertiesFile = new File('gradle.properties')
    propertiesFile.withInputStream {
        replaceProperties.load(it)
    }
}

def pomConfig = {
    licenses {
        license {
            name project.license
        }
    }
    developers {
        developer {
            id "fudge"
            name "natan"
            email "natandestroyer100@gmail.com"
        }
    }

    scm {
        url githubUrl
    }
}




def setupMod(String mod_id, String mod_description, String mod_version, String template_key) {
    def total_version = "$mod_version+$minecraft_version"

    def githubUrl = "https://github.com/$github_repo"

    version total_version
    group maven_group

    bintray {
        user = project.hasProperty('bintray_user') ? project.property('bintray_user') : ""
        key = project.hasProperty('bintray_api_key') ? project.property('bintray_api_key') : ""
        publications = ["MavenPublication"]
        publish = true //[Default: false] Whether version should be auto published after an upload
        pkg {
            name = mod_id
            desc = mod_description
            repo = "libs"
            websiteUrl = githubUrl
            issueTrackerUrl = "$githubUrl/issues"
            githubRepo = github_repo //Optional Github repository
            githubReleaseNotesFile = 'README.md' //Optional Github readme file
            licenses = [license]
            vcsUrl = githubUrl
            version {
                name = total_version
                released = new Date()
            }
        }

    }

    publishing {
        publications {
            MavenPublication(MavenPublication) {
                artifact(remapJar)

                artifact(sourcesJar) {
                    classifier = "sources"
                    builtBy remapSourcesJar
                }
                groupId maven_group
                artifactId mod_id
                version total_version
                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', mod_description)
                    root.appendNode('name', mod_id)
                    root.appendNode('url', githubUrl)
                    root.children().last() + pomConfig
                }
            }
        }
    }

    project.replaceProperties.put(template_key, total_version)
}


allprojects {
    apply plugin: "fabric-loom"
    apply plugin: 'maven-publish'
    apply plugin: "com.jfrog.bintray"
    apply plugin: 'com.matthewprenger.cursegradle'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8


    group maven_group

    dependencies {
        minecraft "com.mojang:minecraft:$minecraft_version"
        mappings "net.fabricmc:yarn:$yarn_mappings:v2"
        modImplementation "net.fabricmc:fabric-loader:$loader_version"
    }

    processResources {
        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }

        inputs.property "version", project.version
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = "sources"
        from sourceSets.main.allSource
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    jar {
        from "LICENSE"
    }
}


task updateTemplate(type: Copy) {
    group = "template"
    description = "Switches out variables like \$total_version in .template.md files, and copies the results into .md files."
    from(rootDir)
    include("**/*.template.md")
    filesMatching("**/*.template.md") {
        def extensionLength = ".template.md".length()

        name = sourceName.substring(0, sourceName.length() - extensionLength) + ".md"
        expand(replaceProperties)
    }
    destinationDir = rootDir
}

bintrayUpload.dependsOn updateTemplate